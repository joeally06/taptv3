---
import Layout from '../layouts/Layout.astro';

const regions = [
  { id: 'west', name: 'West Tennessee' },
  { id: 'middle', name: 'Middle Tennessee' },
  { id: 'east', name: 'East Tennessee' }
];
---

<Layout title="Hall of Fame Nomination">
  <div class="min-h-screen py-12 bg-gray-50">
    <div class="container mx-auto px-4">
      <div class="max-w-2xl mx-auto">
        <div class="bg-white rounded-lg shadow-md p-8">
          <div class="text-center mb-8">
            <img 
              src="https://www.jotform.com/uploads/leriggsbee/form_files/HOF%20Logo.5c6730816e56d4.50015130.png"
              alt="2025 Bus Driver Hall of Fame Award Nomination Logo"
              class="mx-auto max-w-sm mb-6"
            />
            <h1 class="text-3xl font-bold text-primary-800 mb-4">TN School Bus Driver Hall of Fame Nomination Form</h1>
            <div class="w-20 h-1 bg-accent-500 mx-auto mb-6"></div>
          </div>

          <div id="error-message" class="hidden mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded"></div>

          <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-8">
            <p class="text-sm text-yellow-800">
              <strong>Important Notice:</strong> Only the School District Transportation Supervisor (listed with the TN Department of Education) and/or the School District Director of Schools may nominate a school bus driver for the TN Hall of Fame.
            </p>
            <p class="text-sm text-yellow-800 mt-2">
              One (1) winner will be selected from each of the three (3) grand divisions of Tennessee. The nominee must be presently employed by a school district located within the selected Grand Division.
            </p>
          </div>

          <form id="nomination-form" class="space-y-6">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Select a Grand Division of Tennessee *</label>
              <select 
                name="region"
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
              >
                <option value="">Select a region</option>
                {regions.map(region => (
                  <option value={region.id}>{region.name}</option>
                ))}
              </select>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Supervisor/Director First Name *</label>
                <input
                  type="text"
                  name="supervisorFirstName"
                  required
                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                />
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Supervisor/Director Last Name *</label>
                <input
                  type="text"
                  name="supervisorLastName"
                  required
                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                />
              </div>
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">School District *</label>
              <input
                type="text"
                name="district"
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
              />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Supervisor/Director Email *</label>
              <input
                type="email"
                name="supervisorEmail"
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
              />
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Nominee First Name *</label>
                <input
                  type="text"
                  name="nomineeFirstName"
                  required
                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                />
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Nominee Last Name *</label>
                <input
                  type="text"
                  name="nomineeLastName"
                  required
                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                />
              </div>
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Nominee's City *</label>
              <input
                type="text"
                name="nomineeCity"
                required
                placeholder="Where the nominee lives"
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
              />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Reason for Nomination *</label>
              <textarea
                name="nominationReason"
                required
                rows="4"
                placeholder="Please describe why this driver deserves to be nominated for the Hall of Fame"
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
              ></textarea>
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Years of Service with School District</label>
              <input
                type="number"
                name="yearsOfService"
                min="0"
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
              />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Are You a TAPT General Member? *</label>
              <div class="space-x-4">
                <label class="inline-flex items-center">
                  <input type="radio" name="isTAPTMember" value="yes" required class="text-primary-600 focus:ring-primary-500" />
                  <span class="ml-2">Yes</span>
                </label>
                <label class="inline-flex items-center">
                  <input type="radio" name="isTAPTMember" value="no" required class="text-primary-600 focus:ring-primary-500" />
                  <span class="ml-2">No</span>
                </label>
              </div>
            </div>

            <div class="bg-blue-50 border-l-4 border-blue-400 p-4">
              <p class="text-sm text-blue-800">
                <strong>Notice:</strong> The Supervisor or School Director submitting this nomination will receive an "Explanation of Documentation Required" from the TAPT Executive Director. The District Supervisor will be responsible for submitting the required documents requested by the Hall of Fame Selection Committee.
              </p>
              <p class="text-sm text-blue-800 mt-2">
                The Nominee will not be considered a finalist until all of the required Documentation has been received by the TAPT HOF Committee. The cut-off date for nominations is April 15th of each calendar year.
              </p>
            </div>

            <button
              type="submit"
              class="w-full bg-primary-600 text-white py-3 px-6 rounded-md hover:bg-primary-700 transition-colors font-medium"
            >
              Submit Nomination
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('nomination-form');
    const errorMessage = document.getElementById('error-message');

    function showError(message) {
      if (errorMessage) {
        errorMessage.textContent = message;
        errorMessage.classList.remove('hidden');
        setTimeout(() => {
          errorMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }, 100);
      }
    }

    function hideError() {
      if (errorMessage) {
        errorMessage.classList.add('hidden');
      }
    }

    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      hideError();
      
      const formData = new FormData(form);
      const data = {};
      for (const [key, value] of formData.entries()) {
        data[key] = value;
      }

      // Validate required fields
      const requiredFields = {
        supervisorFirstName: 'Supervisor First Name',
        supervisorLastName: 'Supervisor Last Name',
        district: 'School District',
        supervisorEmail: 'Supervisor Email',
        nomineeFirstName: 'Nominee First Name',
        nomineeLastName: 'Nominee Last Name',
        nomineeCity: 'Nominee City',
        nominationReason: 'Reason for Nomination',
        region: 'Grand Division',
        isTAPTMember: 'TAPT Membership Status'
      };

      for (const [field, label] of Object.entries(requiredFields)) {
        if (!data[field] || data[field].trim() === '') {
          showError(`${label} is required`);
          const element = form.elements[field];
          if (element) {
            element.focus();
          }
          return;
        }
      }

      // Email validation
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(data.supervisorEmail)) {
        showError('Please enter a valid email address');
        const element = form.elements['supervisorEmail'];
        if (element) {
          element.focus();
        }
        return;
      }

      try {
        const response = await fetch('/api/hall-of-fame-nominate', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          body: JSON.stringify(data),
        });

        const contentType = response.headers.get('content-type');
        if (!contentType || !contentType.includes('application/json')) {
          throw new Error('Server returned non-JSON response. Please try again later.');
        }

        const responseData = await response.json();
        
        if (!response.ok) {
          throw new Error(responseData.error || responseData.message || 'Nomination submission failed');
        }

        window.location.href = '/hall-of-fame-nomination/success';
      } catch (error) {
        console.error('Nomination error:', error);
        showError(error instanceof Error ? error.message : 'Failed to submit nomination. Please try again.');
      }
    });
  });
</script>